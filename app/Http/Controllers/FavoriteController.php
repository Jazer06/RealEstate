<?php

namespace App\Http\Controllers;

use App\Models\Favorite;
use App\Models\Property;
use App\Models\PurchaseRequest;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;

class FavoriteController extends Controller
{
    public function index()
    {
        $propertyIds = Favorite::where('user_id', auth()->id())->pluck('property_id');
        $favorites = Property::whereIn('id', $propertyIds)->paginate(10);

        return view('favorites.index', compact('favorites'));
    }

    public function toggle(Request $request, Property $property)
    {
        $favorite = Favorite::where('user_id', auth()->id())->where('property_id', $property->id)->first();
        if ($favorite) {
            $favorite->delete();
            return redirect()->back()->with('success', '–£–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!');
        } else {
            Favorite::create([
                'user_id' => auth()->id(),
                'property_id' => $property->id,
            ]);
            return redirect()->back()->with('success', '–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!');
        }
    }

    public function createPurchaseRequest(Request $request, Property $property)
    {
        try {
            $request->validate([
                'comment' => 'nullable|string|max:1000',
            ]);

            $userId = auth()->id();

            // –ü—Ä–æ–≤–µ—Ä–∫–∞: –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º?
            $existsInFavorites = Favorite::where('user_id', $userId)
                ->where('property_id', $property->id)
                ->exists();

            if (!$existsInFavorites) {
                return redirect()->back()->with('error', '‚ùå –û–±—ä–µ–∫—Ç –Ω–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º.');
            }

            // –£–∂–µ –µ—Å—Ç—å –∑–∞—è–≤–∫–∞?
            if (PurchaseRequest::where('user_id', $userId)->where('property_id', $property->id)->exists()) {
                return redirect()->back()->with('error', '‚ö†Ô∏è –ó–∞—è–≤–∫–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.');
            }

            // –°–æ–∑–¥–∞—ë–º –∑–∞—è–≤–∫—É
            PurchaseRequest::create([
                'user_id' => $userId,
                'property_id' => $property->id,
                'comment' => $request->input('comment'),
                'status' => 'pending',
            ]);

            // üî• –£–¥–∞–ª—è–µ–º –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞–ø—Ä—è–º—É—é
            Favorite::where('user_id', $userId)
                ->where('property_id', $property->id)
                ->delete();

            return redirect()->back()->with('success', '‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è.');

        } catch (\Exception $e) {
            \Log::error('–û—à–∏–±–∫–∞ –∑–∞—è–≤–∫–∏: ' . $e->getMessage());
            return redirect()->back()->with('error', '‚ùå –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }

    public function destroy(Favorite $favorite)
    {
        if ($favorite->user_id !== auth()->id()) {
            abort(403, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
        }

        $favorite->delete();

        return redirect()->route('favorites.index')->with('success', '–û–±—ä–µ–∫—Ç —É–¥–∞–ª—ë–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.');
    }
}