<?php

namespace App\Http\Controllers;

use App\Models\Favorite;
use App\Models\Property;
use App\Models\PurchaseRequest;
use App\Models\WhatsAppSender;
use Illuminate\Http\Request;

/**
 * –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏ –∑–∞—è–≤–∫–∞–º–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É.
 */
class FavoriteController extends Controller
{
    /**
     * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     *
     * @return \Illuminate\View\View
     */
    public function index()
    {
        $propertyIds = Favorite::where('user_id', auth()->id())->pluck('property_id');
        $favorites = Property::whereIn('id', $propertyIds)->paginate(10);

        return view('favorites.index', compact('favorites'));
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –∏–ª–∏ —É–¥–∞–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     *
     * @param \Illuminate\Http\Request $request
     * @param \App\Models\Property $property
     * @return \Illuminate\Http\RedirectResponse
     */
    public function toggle(Request $request, Property $property)
    {
        $favorite = Favorite::where('user_id', auth()->id())->where('property_id', $property->id)->first();
        if ($favorite) {
            $favorite->delete();
            return redirect()->back()->with('success', '–£–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!');
        }

        Favorite::create([
            'user_id' => auth()->id(),
            'property_id' => $property->id,
        ]);
        return redirect()->back()->with('success', '–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!');
    }

    /**
     * –°–æ–∑–¥–∞—ë—Ç –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–∫—É–ø–∫—É –æ–±—ä–µ–∫—Ç–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ WhatsApp.
     *
     * @param \Illuminate\Http\Request $request
     * @param \App\Models\Property $property
     * @return \Illuminate\Http\RedirectResponse
     */
    public function createPurchaseRequest(Request $request, Property $property)
    {
        $request->validate([
            'comment' => 'nullable|string|max:1000',
        ]);

        $userId = auth()->id();
        $existsInFavorites = Favorite::where('user_id', $userId)
            ->where('property_id', $property->id)
            ->exists();

        if (!$existsInFavorites) {
            return redirect()->back()->with('error', '‚ùå –û–±—ä–µ–∫—Ç –Ω–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º.');
        }
        if (PurchaseRequest::where('user_id', $userId)->where('property_id', $property->id)->exists()) {
            return redirect()->back()->with('error', '‚ö†Ô∏è –ó–∞—è–≤–∫–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.');
        }

        $purchaseRequest = PurchaseRequest::create([
            'user_id' => $userId,
            'property_id' => $property->id,
            'comment' => $request->input('comment'),
            'status' => 'pending',
        ]);

        Favorite::where('user_id', $userId)
            ->where('property_id', $property->id)
            ->delete();

        $this->sendPurchaseRequestToWhatsApp($purchaseRequest, $property);

        return redirect()->back()->with('success', '‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è.');
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ –Ω–∞ –ø–æ–∫—É–ø–∫—É –≤ WhatsApp-–≥—Ä—É–ø–ø—É.
     *
     * @param \App\Models\PurchaseRequest $purchaseRequest
     * @param \App\Models\Property $property
     * @return void
     */
    private function sendPurchaseRequestToWhatsApp(PurchaseRequest $purchaseRequest, Property $property)
    {
        $message = "üì¢ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É!*\n"
                 . "üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* " . auth()->user()->name . "\n"
                 . "üè† *–û–±—ä–µ–∫—Ç:* {$property->title}\n"
                 . "üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* " . ($purchaseRequest->comment ?: '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è') . "\n\n"
                 . "üïí " . now()->format('d.m.Y H:i');

        $whatsAppSender = new WhatsAppSender();
        $success = $whatsAppSender->send($message);

        if (!$success) {
            return back()->withErrors(['whatsapp' => '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ WhatsApp.'])->withInput();
        }
    }

    /**
     * –£–¥–∞–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     *
     * @param \App\Models\Favorite $favorite
     * @return \Illuminate\Http\RedirectResponse
     */
    public function destroy(Favorite $favorite)
    {
        if ($favorite->user_id !== auth()->id()) {
            abort(403, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
        }

        $favorite->delete();

        return redirect()->route('favorites.index')->with('success', '–û–±—ä–µ–∫—Ç —É–¥–∞–ª—ë–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.');
    }
}